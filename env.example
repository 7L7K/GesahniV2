# Backend configuration

# OpenAI
OPENAI_API_KEY=
OPENAI_MODEL=gpt-4o
OPENAI_TRANSCRIBE_MODEL=whisper-1
WHISPER_MODEL=whisper-1

# LLaMA / Ollama
OLLAMA_URL=http://localhost:11434
OLLAMA_MODEL=llama3:latest
OLLAMA_FORCE_IPV6=0
LLAMA_MAX_STREAMS=2

# Routing
DETERMINISTIC_ROUTER=1
ROUTER_RULES_PATH=router_rules.yaml
ALLOWED_GPT_MODELS=gpt-4o,gpt-4,gpt-3.5-turbo
ALLOWED_LLAMA_MODELS=llama3:latest,llama3
MODEL_ROUTER_HEAVY_WORDS=30
MODEL_ROUTER_HEAVY_TOKENS=1000

# Auth & security
JWT_SECRET=change-me
JWT_EXPIRE_MINUTES=30
JWT_REFRESH_EXPIRE_MINUTES=1440
RATE_LIMIT_PER_MIN=60
# Rate limit backend: memory | redis
RATE_LIMIT_BACKEND=memory
# Optional: override Redis key prefix for rate limit buckets
RATE_LIMIT_REDIS_PREFIX=rl
# Optional: bypass rate limits for requests carrying any of these scopes (spaceâ€‘separated)
RATE_LIMIT_BYPASS_SCOPES=
# Optional: daily cap per user (resets midnight UTC). 0 disables.
DAILY_REQUEST_CAP=0
API_TOKEN=

# Server
CORS_ALLOW_ORIGINS=http://localhost:3000
PORT=8000
SESSIONS_DIR=sessions
ALBUM_ART_DIR=data/album_art

# Optional admin for /config
ADMIN_TOKEN=

# Home Assistant
HOME_ASSISTANT_URL=http://localhost:8123
HOME_ASSISTANT_TOKEN=

# Music / Providers
PROVIDER_SPOTIFY=true
MUSIC_FALLBACK_RADIO=false
EXPLICIT_DEFAULT=true
QUIET_HOURS_START=22:00
QUIET_HOURS_END=07:00
MUSIC_DB=music.db
SPOTIFY_CLIENT_ID=
SPOTIFY_CLIENT_SECRET=
# Optional: process-wide refresh token for single-user setups
SPOTIFY_REFRESH_TOKEN=
FALLBACK_RADIO_URL=http://localhost:8000/static/radio.mp3

# Intent detection
INTENT_THRESHOLD=0.7
SBERT_MODEL=sentence-transformers/paraphrase-MiniLM-L3-v2

# Embeddings
EMBEDDING_BACKEND=openai
EMBED_MODEL=text-embedding-3-small
LLAMA_EMBEDDINGS_MODEL=

# Vector store / RAG
# Options: memory | chroma | qdrant | dual | cloud
VECTOR_STORE=chroma
CHROMA_PATH=.chroma_data
SIM_THRESHOLD=0.24
MEM_TOP_K=3

# Strict selection (fatal on errors, no silent fallback)
# STRICT_VECTOR_STORE=0

# Qdrant Cloud (optional)
QDRANT_URL=
QDRANT_API_KEY=
# Qdrant collections (avoid ':' which is invalid in Qdrant names)
QDRANT_COLLECTION=kb_default
QDRANT_QA_COLLECTION=cache_qa
EMBED_DIM=1536
USE_QUANTIZATION=0

# Dual-read migration flags
# When VECTOR_STORE=dual:
# - Reads go to Qdrant primarily, fall back to Chroma if empty/miss
# - Writes go to Qdrant; set WRITE_BOTH to mirror to Chroma during bake period
VECTOR_DUAL_WRITE_BOTH=0
VECTOR_DUAL_QA_WRITE_BOTH=0
QDRANT_HNSW_M=32
QDRANT_HNSW_EF_CONSTRUCT=128
QDRANT_SEARCH_EF=128

# Retrieval pipeline flags

# Voice & transcripts
VOICE_ENABLED=1
TRANSCRIPTS_SHARE=0
REDACT_PII=1
QUIET_HOURS=0
# Wake/press-to-talk gating: any | wake | ptt | both
WAKE_MODE=any
USE_RETRIEVAL_PIPELINE=0
TOPK_VEC=120
TOPK_FINAL=12
USE_HYDE=0
USE_MMR=1
MMR_LAMBDA=0.3
USE_HYBRID=0
HYBRID_WEIGHT_DENSE=0.6

# Rerankers
RERANK_CASCADE=1
RERANK_LOCAL_MODEL=minilm
RERANK_HOSTED=
RERANK_GATE_LOW=0.0

# MemGPT policy
MEM_POLICY=default
MEM_WRITE_QUOTA_PER_SESSION=30
MEM_IMPORTANCE_TAU=0.7
MEM_NOVELTY_TAU=0.55

# Observability
TRACE_SAMPLE_RATE=0.2
LATENCY_BUDGET_MS=900
ABLATION_FLAGS=hyde,mmr,cascade

# External services
TRANSLATE_URL=http://localhost:5000
OPENWEATHER_API_KEY=
CITY_NAME=Detroit,US

# Data paths
HISTORY_FILE=data/history.jsonl
FOLLOW_UPS_FILE=data/follow_ups.json
USERS_DB=users.db

# Background queue (optional)
REDIS_URL=redis://localhost:6379/0

# Debugging
DEBUG=0
DEBUG_MODEL_ROUTING=0

# Google OAuth (optional)
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
GOOGLE_REDIRECT_URI=http://localhost:8000/google/oauth/callback
JWT_STATE_SECRET=change-me-state
GOOGLE_OAUTH_DB_URL=sqlite:///./google_oauth.sqlite3
# Default scopes aligned with Google userinfo endpoints
GOOGLE_SCOPES="openid https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/calendar.events"

# ------------------------
# TTS Orchestrator
# ------------------------
# Default tiers: piper | mini_tts | tts1 | tts1_hd
DEFAULT_CAPTURE_TIER=mini_tts
DEFAULT_UTILITY_TIER=piper

# Budget caps (monthly) for TTS in USD
MONTHLY_TTS_CAP=15

# User override: always_openai | always_piper | auto
VOICE_MODE=auto

# Privacy: if true, sensitive content uses Piper only
TTS_PRIVACY_LOCAL_ONLY=1

# Optional Piper config
PIPER_VOICE=en_US-amy-low
PIPER_DEVICE=auto

# OpenAI TTS
OPENAI_TTS_MODEL=tts-1
OPENAI_TTS_VOICE=alloy
OPENAI_TTS_HD_MODEL=tts-1-hd
OPENAI_TTS_MINI_MODEL=gpt-4o-mini-tts

