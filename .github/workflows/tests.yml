name: Core Test Gates

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  smoke-tests:
    name: "Smoke Tests"
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: app
          POSTGRES_PASSWORD: app_pw
          POSTGRES_DB: gesahni_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install alembic psycopg2-binary sqlalchemy

    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h localhost -p 5432; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done

    - name: Set DATABASE_URL
      run: echo "DATABASE_URL=postgresql://app:app_pw@localhost:5432/gesahni_test" >> $GITHUB_ENV

    - name: Check for SQLite usage (Phase 4 requirement)
      run: |
        echo "🔍 Scanning for SQLite usage in app/ directory..."
        python scripts/check_no_sqlite.py

    - name: Check pending migration heads (Phase 4 requirement)
      run: |
        echo "🔍 Checking for pending migration heads..."
        python scripts/check_pending_heads.py

    - name: Run database migrations
      run: |
        echo "🔄 Running database migrations..."
        alembic upgrade head

    - name: Run smoke tests
      run: |
        python -m pytest tests/smoke -q

    - name: Run Phase 5 database behavior smoke tests
      run: |
        echo "🚀 Running Phase 5 Database Behavior Smoke Tests..."
        python scripts/smoke.py

  oauth-tests:
    name: "OAuth Tests"
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: app
          POSTGRES_PASSWORD: app_pw
          POSTGRES_DB: gesahni_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install alembic psycopg2-binary sqlalchemy

    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h localhost -p 5432; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done

    - name: Set DATABASE_URL
      run: echo "DATABASE_URL=postgresql://app:app_pw@localhost:5432/gesahni_test" >> $GITHUB_ENV

    - name: Run database migrations
      run: |
        alembic upgrade head

    - name: Run OAuth tests
      run: |
        python -m pytest tests/google -q
        python -m pytest -k "spotify" -q

  contract-tests:
    name: "Contract Tests"
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: app
          POSTGRES_PASSWORD: app_pw
          POSTGRES_DB: gesahni_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install alembic psycopg2-binary sqlalchemy

    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h localhost -p 5432; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done

    - name: Set DATABASE_URL
      run: echo "DATABASE_URL=postgresql://app:app_pw@localhost:5432/gesahni_test" >> $GITHUB_ENV

    - name: Run database migrations
      run: |
        alembic upgrade head

    - name: Run contract tests
      run: |
        python -m pytest tests/contract -k "openapi or route or coverage" -q

  ask-router-tests:
    name: "Ask Router Contract Tests"
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: app
          POSTGRES_PASSWORD: app_pw
          POSTGRES_DB: gesahni_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install alembic psycopg2-binary sqlalchemy

    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h localhost -p 5432; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done

    - name: Set DATABASE_URL
      run: echo "DATABASE_URL=postgresql://app:app_pw@localhost:5432/gesahni_test" >> $GITHUB_ENV

    - name: Run database migrations
      run: |
        alembic upgrade head

    - name: Run ask router contract tests
      run: |
        python -m pytest tests/integration/test_ask_router_contract.py -q

  refresh-sessions-tests:
    name: "Refresh & Sessions Tests"
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: app
          POSTGRES_PASSWORD: app_pw
          POSTGRES_DB: gesahni_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install alembic psycopg2-binary sqlalchemy

    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h localhost -p 5432; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done

    - name: Set DATABASE_URL
      run: echo "DATABASE_URL=postgresql://app:app_pw@localhost:5432/gesahni_test" >> $GITHUB_ENV

    - name: Run database migrations
      run: |
        alembic upgrade head

    - name: Run refresh and sessions tests
      run: |
        python -m pytest tests/integration/test_refresh_* tests/integration/test_sessions_bucket.py -q
