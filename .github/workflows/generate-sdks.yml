name: Generate and Publish SDKs

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'SDK version to publish'
        required: false
        default: 'latest'

env:
  API_URL: http://localhost:8000
  VERSION: ${{ github.event.inputs.version || github.ref_name }}

jobs:
  generate-sdks:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install OpenAPI Generator
      run: npm install -g @openapitools/openapi-generator-cli

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install twine setuptools wheel

    - name: Start API server
      run: |
        pip install -r requirements.txt
        python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 &
        sleep 10

    - name: Generate SDKs
      run: ./scripts/generate-sdks.sh generate

    - name: Upload SDKs as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: sdks
        path: sdks/
        retention-days: 30

  publish-js-sdk:
    needs: generate-sdks
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Download SDKs
      uses: actions/download-artifact@v4
      with:
        name: sdks
        path: sdks/

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'

    - name: Publish JavaScript SDK
      run: |
        cd sdks/js
        npm ci
        npm run build
        npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-python-sdk:
    needs: generate-sdks
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Download SDKs
      uses: actions/download-artifact@v4
      with:
        name: sdks
        path: sdks/

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install twine setuptools wheel

    - name: Publish Python SDK
      run: |
        cd sdks/python
        python setup.py sdist bdist_wheel
        twine upload dist/* --verbose
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}

  create-release:
    needs: [publish-js-sdk, publish-python-sdk]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Download SDKs
      uses: actions/download-artifact@v4
      with:
        name: sdks
        path: sdks/

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## SDKs Generated

          This release includes automatically generated client SDKs for the GesahniV2 API.

          ### Downloads
          - **JavaScript/TypeScript**: `npm install @gesahni/client@${{ github.ref_name }}`
          - **Python**: `pip install gesahni-client==${{ github.ref_name }}`
          - **Go**: `go get github.com/gesahni/go-client@${{ github.ref_name }}`

          ### Files
          - JavaScript SDK: [gesahni-js-sdk-${{ github.ref_name }}.tar.gz](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/gesahni-js-sdk-${{ github.ref_name }}.tar.gz)
          - Python SDK: [gesahni-python-sdk-${{ github.ref_name }}.tar.gz](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/gesahni-python-sdk-${{ github.ref_name }}.tar.gz)
          - Go SDK: [gesahni-go-sdk-${{ github.ref_name }}.tar.gz](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/gesahni-go-sdk-${{ github.ref_name }}.tar.gz)

          ### Migration Guide
          See [API Changelog & Migration Guide](docs/api-changelog.md) for migration instructions.
        draft: false
        prerelease: false

    - name: Upload JavaScript SDK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: sdks/js-${{ github.ref_name }}.tar.gz
        asset_name: gesahni-js-sdk-${{ github.ref_name }}.tar.gz
        asset_content_type: application/gzip

    - name: Upload Python SDK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: sdks/python-${{ github.ref_name }}.tar.gz
        asset_name: gesahni-python-sdk-${{ github.ref_name }}.tar.gz
        asset_content_type: application/gzip

    - name: Upload Go SDK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: sdks/go-${{ github.ref_name }}.tar.gz
        asset_name: gesahni-go-sdk-${{ github.ref_name }}.tar.gz
        asset_content_type: application/gzip
